version: '3.9'

services:
#  http-proxy:
#    image: caddy:2.6.2-alpine
#    volumes:
#      - ./docker/caddy/Caddyfile:/etc/caddy/Caddyfile
#    ports:
#      - "9090:9090"
#    networks:
#      - demo-network

#  rabbitmq:
#    image: rabbitmq:3-management
#    healthcheck:
#      test: rabbitmq-diagnostics -q ping
#      interval: 5s
#      timeout: 30s
#      retries: 5
#    volumes:
#      - ./docker/rabbitmq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config:ro
#      - ./docker/rabbitmq/rabbitmq-definitions.json:/etc/rabbitmq/definitions.json:ro
#    networks:
#      - demo-network

  mongodb:
    image: mongo:5.0
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - .volumes/mongo-it/data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=demo
      - MONGO_INITDB_ROOT_PASSWORD=demopwd
      - MONGO_INITDB_DATABASE=demo-db
#    healthcheck:
#      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
#      interval: 10s
#      timeout: 10s
#      retries: 3
#      start_period: 30s
    networks:
      - demo-network


#  mongo-express:
#    image: mongo-express
#    restart: always
#    ports:
#      - "8081:8081"
#    environment:
#      ME_CONFIG_MONGODB_ADMINUSERNAME: demo
#      ME_CONFIG_MONGODB_ADMINPASSWORD: demopwd
#      #ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
#      ME_CONFIG_MONGODB_URL: mongodb://demo:demopwd@mongodb:27017/
#    networks:
#      - demo-network



  sonarqube:
    # https://hub.docker.com/_/sonarqube
    # http://localhost:9000
    # https://docs.sonarqube.org/9.9/analyzing-source-code/scanners/sonarscanner-for-maven/
    # mvn sonar:sonar -Dsonar.login=sqa_dadccd3cf3d47280a09b6ad6340249512dd4197a
    # curl -u admin:admin -X POST "http://localhost:9000/api/users/change_password?login=admin&previousPassword=admin&password=123"
    #image: sonarqube:8.9-community
    # image: sonarqube:9.4-community
    image: sonarqube:9.9.0-community
    ports:
      - "9001:9001"
      - "9000:9000"
    networks:
      - demo-network
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - .volumes/sonar/sonarqube_data:/opt/sonarqube/data
      - .volumes/sonar/sonarqube_extensions:/opt/sonarqube/extensions
      - .volumes/sonar/sonarqube_logs:/opt/sonarqube/logs

  db:
    image: postgres:13-alpine
    hostname: postgres
    container_name: postgres
    ports:
      - "5432:5432"
    networks:
      - demo-network
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - .volumes/postgresql/postgresql:/var/lib/postgresql
      - .volumes/postgresql/postgresql_data:/var/lib/postgresql/data

networks:
  demo-network:
    driver: bridge
