version: '3.9'

services:
  http-proxy:
    image: caddy:2.6.2-alpine
    volumes:
      - ./docker/caddy/Caddyfile:/etc/caddy/Caddyfile
    ports:
      - "9090:9090"
    networks:
      - demo-network

  rabbitmq:
    image: rabbitmq:3-management
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 30s
      retries: 5
    volumes:
      - ./docker/rabbitmq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config:ro
      - ./docker/rabbitmq/rabbitmq-definitions.json:/etc/rabbitmq/definitions.json:ro
    networks:
      - demo-network

  mongodb:
    image: mongo:5.0
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - .volumes/mongo-it/data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=demo
      - MONGO_INITDB_ROOT_PASSWORD=demopwd
      - MONGO_INITDB_DATABASE=demo-db
#    healthcheck:
#      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
#      interval: 10s
#      timeout: 10s
#      retries: 3
#      start_period: 30s
    networks:
      - demo-network


  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: demo
      ME_CONFIG_MONGODB_ADMINPASSWORD: demopwd
      #ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_MONGODB_URL: mongodb://demo:demopwd@mongodb:27017/
    networks:
      - demo-network


networks:
  demo-network:
    driver: bridge
