spring.profiles.active=prod

################################
## Data source
################################
spring.datasource.url=jdbc:mysql://localhost/food4u?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=my-secret-pw

################################
## hikari
################################
# The hikari is the default connection pool used by the spring boot
# Max connections of the pool, by default the value is 10
spring.datasource.hikari.maximum-pool-size=10
# Min connection of the pool, by default the value is to the 'maximum-pool-size'
spring.datasource.hikari.minimum-idle=5
# How long extra connections between [maximum-pool-size, minimum-idle] will be kept in the pool
# Value is in milliseconds and minimum acceptable value is 10 seconds (10,000 milliseconds)
spring.datasource.hikari.idle-timeout=10000
# maximum number of milliseconds that a client will wait for a connection
# spring.datasource.hikari.connection-timeout = 20000
# maximum lifetime in milliseconds of a connection in the pool after it is closed.
#spring.datasource.hikari.max-lifetime= 1000
# This property controls the default auto-commit behavior of connections returned from the pool.
# It is a boolean value. Default: true
spring.datasource.hikari.auto-commit=false
# we can see the list of mysql connections with the query command: show processlist;


################################
## Jpa and Hibernate
################################
# this is a way to improve the performance of the application,
# this way the hibernate knows that the connections are already autocommit = false (default value for this property is false)
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.generate_statistics=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect

# generate the script using the meta-model without executing
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=docs/extraction.sql

spring.flyway.locations=classpath:/db/migration

################################
## Logging - this properties value are for dev profile
################################
#spring.jackson.deserialization.fail-on-unknown-properties=true
#spring.jackson.serialization.fail-on-empty-beans=false
################################
## Logging - this properties value are for dev profile
################################
# In production the level of log must be the lowest, the level in production must be only for (ERROR).
# there is no intention to spend time or processing on unnecessary logs.
#
#log4j.logger.org.hibernate=error
#NOTAS
#   - Log error messages only
#   - Log level WARN creates additional JDBC statements!
#   - Use log level ERROR, not WARN
logging.level.root=ERROR
logging.level.org.hibernate=ERROR
logging.level.org.hibernate.SQL=OFF
logging.level.org.hibernate.type.descriptor.sql=OFF
logging.level.org.hibernate.stat=OFF
logging.level.org.hibernate.cache=OFF
logging.level.org.hibernate.engine.transaction.internal.TransactionImpl=OFF
logging.level.org.hibernate.engine.jdbc.batch=OFF
